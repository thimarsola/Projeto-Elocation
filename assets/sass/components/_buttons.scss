@use '../abstracts' as *;

.btn {
    display: inline-block !important;
    margin: 0;
    padding: var(--fs-200) var(--fs-500);
    cursor: pointer;
    //vertical-align: middle;
    outline: none;
    border-width: 2px;
    border-style: solid;
    transform: scale(1);
    line-height: 1.1 !important;
    transition: transform 0.3s ease-in-out;

    font: {
        family: var(--bold) !important;
        size: var(--fs-200);
    }

    &:active {
        transform: scale(1.1);
        transition: transform 0.3s ease-in-out;
    }
}

.btn-block{
  display: block !important;
  width: 100%;
}

@each $color, $shade in $colors {
    @each $prop, $value in $shade {
        @if $value == white {
            .btn-#{$color}-#{$prop} {
                background-color: $value;
                color: var(--clr-dark-gray-500);
                border-color: $value;
                @include transition(all);

                &:hover {
                    color: var(--clr-white-500);
                    background-color: var(--clr-dark-gray-500);
                    border-color: var(--clr-dark-gray-500);
                    @include transition(all);
                }
            }
        }@else if $color == neutral{
            .btn-#{$color}-#{$prop} {
                background-color: $value;
                color: var(--clr-white-500);
                border-color: var(--clr-white-500);
                @include transition(all);

                &:hover {
                    color: var(--clr-neutral-500);
                    background-color: var(--clr-white-500);
                    border-color: var(--clr-white-500);
                    @include transition(all);
                }
            }
        }@else {
            .btn-#{$color}-#{$prop} {
                background-color: $value;
                color: var(--clr-white-500);
                border-color: $value;
                @include transition(all);

                &:hover {
                    background-color: darken($value, 5%);
                    border-color: darken($value, 5%);
                    @include transition(all);
                }
            }
        }
    }
}

@each $color, $shade in $colors{
  @each $prop, $value in $shade {
    @if $value == white {
      .btn-outline-#{$color}-#{$prop} {
        color: $value;
        border-color: $value;
        background: transparent;
        @include transition(all);

        &:hover {
          color: var(--clr-dark-gray-500);
          background: $value;
          border-color: $value;
          @include transition(all);
        }
      }
    }@else {
      .btn-outline-#{$color}-#{$prop} {
        color: $value;
        border-color: $value;
        background: transparent;
        @include transition(all);

        &:hover, &:focus {
          color: var(--clr-white-500);
          background: $value;
          border-color: $value;
          @include transition(all);
        }
      }
    }
  }
}
